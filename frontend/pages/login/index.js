import Head from "next/head";
import styles from "./Login.module.css";
import { useState, useRef, useState } from "react";
import Link from "next/link";
import { useDispatch } from "react-redux";
import { setCredentials } from "../../features/auth/authSlice";
import { userLoginMutation } from "../../features/auth/authApiSlice";
import { useRouter } from "next/router";

const index = () => {
  const router = useRouter();
  const userRef = useRef();
  const errRef = useRef();
  const [user, setUser] = useState("");
  const [password, setPassword] = useState("");
  const [errMsg, setErrMsg] = useState("");

  const [login, { isLoading }] = userLoginMutation();
  const dispatch = useDispatch();

  useEffect(() => {
    useRef.current.focus();
  }, []);

  useEffect(() => {
    setErrMsg("");
  }, [user, password]);

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const userData = await login({ user, password }).unwrap();
      dispatch(setCredentials(...userData, user));
      setUser("");
      setPassword("");
      router.push("/welcome");
    } catch (err) {
      if (!err?.response) {
        setErrMsg("No Server Response");
      } else if (err.response?.status === 400) {
        setErrMsg("Missing Username or Password");
      } else if (err.response?.status === 401) {
        setErrMsg("Unauthorized");
      } else {
        setErrMsg("Login Failed");
      }
      errRef.current.focus();
    }
  };

  const handleUserInput = (e) => setUser(e.target.value);

  const handlePasswordInput = (e) => setPassword(e.target.value);

  const content = isLoading ? (
    <h1>Loading ...</h1>
  ) : (
    <div className={styles.container}>
      <Head>
        <title>Ecommerce - Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/shopping-bag.png" />
      </Head>

      <main className={styles.main}>
        <form className={styles.loginContainer} onSubmit={handleSubmit}>
          <p ref={errRef} className={errMsg ? "errmsg" : "offscreen"}></p>
          <h2 className={styles.title}>Login</h2>
          <div className={styles.inputBox}>
            <label htmlFor="email" className={styles.label}>
              Email
            </label>
            <input
              className={styles.input}
              type="text"
              id="email"
              name="email"
              ref={userRef}
              placeholder="Enter your email"
              value={datos.email}
              onChange={handleUserInput}
              autoComplete="off"
              required="required"
            />
          </div>
          <div className={styles.inputBox}>
            <label htmlFor="password" className={styles.label}>
              Password
            </label>
            <input
              className={styles.input}
              type="password"
              id="password"
              name="password"
              ref={passwordRef}
              placeholder="Enter your password"
              value={datos.password}
              onChange={handlePasswordInput}
              required="required"
            />
          </div>
          <input className={styles.btnSubmit} type="submit" value={"Sign in"} />
          <Link href={"/register"}>
            <p className={styles.helpLogin}>Do you have an account?</p>
          </Link>
        </form>
      </main>
    </div>
  );

  return content;
};

export default index;
